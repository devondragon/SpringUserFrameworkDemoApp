version: "3.8"

services:
  myapp-db:
    image: mariadb:11.6.2
    container_name: springuser-db  #
    volumes:
      - userdb:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: springuser
      MYSQL_USER: springuser
      MYSQL_PASSWORD: springuser
      MYSQL_TCP_PORT: 3307
    ports:
      - "3307:3307"
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 1m
      start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3

  mailserver:
    image: docker.io/mailserver/docker-mailserver:latest
    container_name: springuser-mail
    hostname: mailserver
    domainname: local
    env_file: mailserver.env
    ports:
      - "25:25"
      - "587:587"
    volumes:
      - maildata:/var/mail
      - mailstate:/var/mail-state
      - maillogs:/var/log/mail
      - ./config/:/tmp/docker-mailserver/${SELINUX_LABEL}
    environment:
      PERMIT_DOCKER: connected-networks
      ONE_DIR: 1
      DMS_DEBUG: 0
      SPOOF_PROTECTION: 0
      REPORT_RECIPIENT: 1
      ENABLE_SPAMASSASSIN: 0
      ENABLE_CLAMAV: 0
      ENABLE_FAIL2BAN: 1
      ENABLE_POSTGREY: 0
      SMTP_ONLY: 1
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "25"]
      interval: 30s
      timeout: 10s
      retries: 5

  myapp-main:
    image: spring-user-framework-demo
    container_name: springuser-app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      myapp-db:
        condition: service_healthy
      mailserver:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file: keycloak.env
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://myapp-db:3307/springuser?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: springuser
      SPRING_DATASOURCE_PASSWORD: springuser
      SPRING_PROFILES_ACTIVE: docker-keycloak
      SPRING_MAIL_HOST: mailserver
      SPRING_MAIL_PORT: 25
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "false"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "false"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED: "false"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    container_name: keycloak.openid-provider
    image: quay.io/keycloak/keycloak:25.0.6
    command:
      - start
      - --verbose
      - --import-realm
    ports:
      - "8180:8080"
      - "8143:8443"
      - "9001:9000"
    volumes:
      - ./keycloak/ssl:/opt/keycloak/ssl/
      - ./keycloak/realm:/opt/keycloak/data/import/
    env_file: keycloak.env
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB_URL: jdbc:mariadb://myapp-db:3307/springuser
      KC_DB_USERNAME: springuser
      KC_DB_PASSWORD: springuser
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:8080/auth/health/live']
      interval: 5s
      timeout: 5s
      retries: 20
    depends_on:
      myapp-db:
        condition: service_healthy

volumes:
  maildata:
  mailstate:
  maillogs:
  userdb:
  keycloak:
